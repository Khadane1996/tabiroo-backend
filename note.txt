
php artisan serve --host 192.168.1.8 --port 8000

-Créons nos tables:
    php artisan make:migration create_roles_table
	php artisan make:migration create_adresses_table
	php artisan make:migration create_bancaires_table
	php artisan make:migration create_portefeuilles_table

	php artisan make:migration create_types_de_plat_table
	php artisan make:migration create_types_de_cuisine_table
	php artisan make:migration create_regimes_alimentaire_table
	php artisan make:migration create_themes_culinaire_table
	php artisan make:migration create_types_de_repas_table

	php artisan make:migration create_plats_table
	php artisan make:migration create_menus_table
	php artisan make:migration create_menu_plat_table

	php artisan make:migration create_prestations_table
	php artisan make:migration create_menu_prestation_table


-Créons son model:
	php artisan make:model Role
	php artisan make:model Adresse
	php artisan make:model Bancaire
	php artisan make:model Portefeuille
	php artisan make:model TypeDePlat
	php artisan make:model TypeDeCuisine
	php artisan make:model RegimeAlimentaire
	php artisan make:model ThemeCulinaire
	php artisan make:model TypeDeRepas

	php artisan make:model Plat
	php artisan make:model Menu

	php artisan make:model Prestation

-Créons une classe seeder pour la table roles:
	php artisan make:seeder RolesTableSeeder
	php artisan make:seeder TypeDeRepasTableSeeder

-Créons des factory
	php artisan make:factory RoleFactory --model=Role

-Créons les contrôleurs:
	php artisan make:controller API/V1/AuthController
	php artisan make:controller API/V1/ProfilController
	php artisan make:controller API/V1/PlatController
	php artisan make:controller API/V1/MenuController
	php artisan make:controller API/V1/DataSeedController
	php artisan make:controller API/V1/PrestationController



'token' => $user->createToken("API TOKEN")->plainTextToken


composer require twilio/sdk

-> php artisan tinker

	$sid = env('TWILIO_SID');
	$token = env('TWILIO_TOKEN');
	$from = env('TWILIO_PHONE');
	$client = new \Twilio\Rest\Client($sid, $token);
	$client->messages->create('+221781311030', ['from' => $from, 'body' => 'Je teste l\'envoi des messages']);

+18148319596
+221781311030

->php artisan config:clear

sudo ln -s /etc/nginx/sites-available/tabiroo-backend /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx

sudo chown -R www-data:www-data /var/www/html/tabiroo-backend
sudo chmod -R 775 /var/www/html/tabiroo-backend/storage /var/www/html/tabiroo-backend/bootstrap/cache

sudo apt install certbot python3-certbot-nginx -y
sudo certbot --nginx -d tabiroo.com

dig www.tabiroo.com +short
dig tabiroo.com +short

sudo nano /etc/apache2/sites-available/tabiroo.conf

<VirtualHost *:80>
    ServerName tabiroo.com
    ServerAlias www.tabiroo.com
    DocumentRoot /var/www/html/tabiroo-backend/public

    <Directory /var/www/html/tabiroo-backend/public>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    ErrorLog ${APACHE_LOG_DIR}/tabiroo_error.log
    CustomLog ${APACHE_LOG_DIR}/tabiroo_access.log combined
RewriteEngine on
RewriteCond %{SERVER_NAME} =www.tabiroo.com [OR]
RewriteCond %{SERVER_NAME} =tabiroo.com
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

sudo a2ensite tabiroo.conf
sudo a2enmod rewrite
sudo systemctl reload apache2
sudo systemctl restart apache2

<VirtualHost *:80>
    ServerName www.tabiroo.com
    ServerAlias 146.59.230.22
    DocumentRoot /var/www/html/tabiroo-backend/public
    <Directory /var/www/html/tabiroo-backend>
        AllowOverride All
        Require all granted
    </Directory>
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
RewriteEngine on
RewriteCond %{SERVER_NAME} =www.tabiroo.com [OR]
RewriteCond %{SERVER_NAME} =146.59.230.22
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>


sudo chown -R ubuntu /var/www/html/tabiroo-backend/
sudo chown -R ubuntu /var/www/html/tabiroo-backend/storage
sudo chown -R ubuntu /var/www/html/tabiroo-backend/bootstrap/cache


sudo chmod -R 775 /var/www/html/tabiroo-backend
sudo chown -R www-data:www-data /var/www/html/tabiroo-backend
sudo chmod -R 755 /var/www/html/tabiroo-backend

sudo chown -R www-data /var/www/html/tabiroo-backend/storage
sudo chown -R www-data /var/www/html/tabiroo-backend/bootstrap/cache

2. Sur le VPS
(Optionnel) Si tu veux conserver les fichiers d’uploads actuels en local sur le VPS, fais d’abord une copie de sauvegarde :

bash
Copier
Modifier
sudo -u www-data cp -r /var/www/html/tabiroo-backend/public/uploads /var/www/html/../uploads-backup
Récupère la dernière version du dépôt (en tant que www-data) :

bash
Copier
Modifier
sudo -u www-data git -C /var/www/html/tabiroo-backend pull


