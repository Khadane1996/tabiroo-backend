
php artisan serve --host 172.20.10.2 --port 8000

> lsof -i :8000
> kill -9 $(lsof -ti :8000)

-Créons nos tables:
    php artisan make:migration create_roles_table
	php artisan make:migration create_adresses_table
	php artisan make:migration create_bancaires_table
	php artisan make:migration create_portefeuilles_table
	php artisan make:migration create_ambianceanimations_table

	php artisan make:migration create_types_de_plat_table
	php artisan make:migration create_types_de_cuisine_table
	php artisan make:migration create_regimes_alimentaire_table
	php artisan make:migration create_themes_culinaire_table
	php artisan make:migration create_types_de_repas_table

	php artisan make:migration create_plats_table
	php artisan make:migration create_menus_table
	php artisan make:migration create_menu_plat_table

	php artisan make:migration create_prestations_table
	php artisan make:migration create_menu_prestation_table
	php artisan make:migration create_reservations_table
	php artisan make:migration create_notifications_table
	php artisan make:migration create_avis_clients_table


-Créons son model:
	php artisan make:model Role
	php artisan make:model Adresse
	php artisan make:model Bancaire
	php artisan make:model Portefeuille
	php artisan make:model TypeDePlat
	php artisan make:model TypeDeCuisine
	php artisan make:model RegimeAlimentaire
	php artisan make:model ThemeCulinaire
	php artisan make:model TypeDeRepas
	php artisan make:model AmbianceAnimation
	php artisan make:model AvisClient
	

	php artisan make:model Plat
	php artisan make:model Menu

	php artisan make:model Prestation
	php artisan make:model Reservation
	php artisan make:model Notification

-Créons une classe seeder pour la table roles:
	php artisan make:seeder RolesTableSeeder
	php artisan make:seeder TypeDeRepasTableSeeder
	php artisan make:seeder AmbianceAnimationsTableSeeder

-Créons des factory
	php artisan make:factory RoleFactory --model=Role

-Créons les contrôleurs:
	php artisan make:controller API/V1/AuthController
	php artisan make:controller API/V1/ProfilController
	php artisan make:controller API/V1/PlatController
	php artisan make:controller API/V1/MenuController
	php artisan make:controller API/V1/DataSeedController
	php artisan make:controller API/V1/PrestationController

	php artisan make:controller API/V1/Client/AllPrestationController
	php artisan make:controller API/V1/Client/ReservationController
	php artisan make:controller API/V1/Client/NotificationController
	php artisan make:controller API/V1/Client/AvisClientController
	php artisan make:controller API/V1/TableauBordController

'token' => $user->createToken("API TOKEN")->plainTextToken


composer require twilio/sdk

-> php artisan tinker

	$sid = env('TWILIO_SID');
	$token = env('TWILIO_TOKEN');
	$from = env('TWILIO_PHONE');
	$client = new \Twilio\Rest\Client($sid, $token);
	$client->messages->create('+221781311030', ['from' => $from, 'body' => 'Je teste l\'envoi des messages']);

+18148319596
+221781311030

->php artisan config:clear

sudo ln -s /etc/nginx/sites-available/tabiroo-backend /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx

sudo chown -R www-data:www-data /var/www/html/tabiroo-backend
sudo chmod -R 775 /var/www/html/tabiroo-backend/storage /var/www/html/tabiroo-backend/bootstrap/cache

sudo apt install certbot python3-certbot-nginx -y
sudo certbot --nginx -d tabiroo.com

dig www.tabiroo.com +short
dig tabiroo.com +short

sudo nano /etc/apache2/sites-available/tabiroo.conf

<VirtualHost *:80>
    ServerName tabiroo.com
    ServerAlias www.tabiroo.com
    DocumentRoot /var/www/html/tabiroo-backend/public

    <Directory /var/www/html/tabiroo-backend/public>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>

    ErrorLog ${APACHE_LOG_DIR}/tabiroo_error.log
    CustomLog ${APACHE_LOG_DIR}/tabiroo_access.log combined
RewriteEngine on
RewriteCond %{SERVER_NAME} =www.tabiroo.com [OR]
RewriteCond %{SERVER_NAME} =tabiroo.com
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

sudo a2ensite tabiroo.conf
sudo a2enmod rewrite
sudo systemctl reload apache2
sudo systemctl restart apache2

<VirtualHost *:80>
    ServerName www.tabiroo.com
    ServerAlias 146.59.230.22
    DocumentRoot /var/www/html/tabiroo-backend/public
    <Directory /var/www/html/tabiroo-backend>
        AllowOverride All
        Require all granted
    </Directory>
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
RewriteEngine on
RewriteCond %{SERVER_NAME} =www.tabiroo.com [OR]
RewriteCond %{SERVER_NAME} =146.59.230.22
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>


sudo chown -R ubuntu /var/www/html/tabiroo-backend/
sudo chown -R ubuntu /var/www/html/tabiroo-backend/storage
sudo chown -R ubuntu /var/www/html/tabiroo-backend/bootstrap/cache


sudo chmod -R 775 /var/www/html/tabiroo-backend
sudo chown -R www-data:www-data /var/www/html/tabiroo-backend
sudo chmod -R 755 /var/www/html/tabiroo-backend

sudo chown -R www-data /var/www/html/tabiroo-backend/storage
sudo chown -R www-data /var/www/html/tabiroo-backend/bootstrap/cache

2. Sur le VPS
(Optionnel) Si tu veux conserver les fichiers d’uploads actuels en local sur le VPS, fais d’abord une copie de sauvegarde :

bash
Copier
Modifier
sudo -u www-data cp -r /var/www/html/tabiroo-backend/public/uploads /var/www/html/../uploads-backup
Récupère la dernière version du dépôt (en tant que www-data) :

bash
Copier
Modifier
sudo -u www-data git -C /var/www/html/tabiroo-backend pull


php artisan route:clear
php artisan config:clear
php artisan cache:clear
php artisan route:list

i.diaby@outlook.com 3 $2y$12$mYq49ew9T/1A1Q2ve7YoIu0ZNJh9y10mvSSOfd285njgqrjvi6TA6 2025-05-27 02:21:19 2025-05-27 02:21:19
781311030 ligrejutsu96@gmail.com 2 $2y$12$1q9NdPQbBXTatLVPgW2ZqueGsmiJnu4A8jUEkahA.6mDS1wjSTzl6 2025-05-27 15:29:06 2025-05-27 19:29:08

- sudo -i -u postgres
- psql
- SELECT pg_terminate_backend(pid)
	FROM pg_stat_activity
	WHERE datname = 'dbxtabiroo' AND pid <> pg_backend_pid();
DROP DATABASE dbxtabiroo;

CREATE DATABASE dbxtabiroo OWNER postgres;



psql dbxtabiroo < /Users/khalifasidibe/Desktop/DataBases\ posgres/dbxtabiroo.sql
psql dbxagridigibox < /Users/khalifasidibe/Desktop/DataBases\ posgres/dbxagridigibox.sql
psql dbxentreprendar < /Users/khalifasidibe/Desktop/DataBases\ posgres/dbxentreprendar.sql
psql dbxkomkomboxai < /Users/khalifasidibe/Desktop/DataBases\ posgres/dbxkomkomboxai.sql
psql dbxsenlinkpro < /Users/khalifasidibe/Desktop/DataBases\ posgres/dbxsenlinkpro.sql
psql dbxtech-ecommerce < /Users/khalifasidibe/Desktop/DataBases\ posgres/dbxtech-ecommerce.sql


MAIL_MAILER=smtp
MAIL_SCHEME=null
MAIL_HOST=sandbox.smtp.mailtrap.io
MAIL_PORT=587
MAIL_USERNAME=f0ced3b83a94b0
MAIL_PASSWORD=8ea73f6b786afe
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS="inuyashakha96@gmail.com"
MAIL_FROM_NAME="${APP_NAME}"